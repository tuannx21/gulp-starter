!function i(c,d,l){function u(t,e){if(!d[t]){if(!c[t]){var o="function"==typeof require&&require;if(!e&&o)return o(t,!0);if(a)return a(t,!0);var n=new Error("Cannot find module '"+t+"'");throw n.code="MODULE_NOT_FOUND",n}var r=d[t]={exports:{}};c[t][0].call(r.exports,function(e){return u(c[t][1][e]||e)},r,r.exports,i,c,d,l)}return d[t].exports}for(var a="function"==typeof require&&require,e=0;e<l.length;e++)u(l[e]);return u}({1:[function(e,t,o){"use strict";var l,u=e("./todo-function"),n=function(d){l.map(function(e){var t=document.querySelector("#todo-template").content.cloneNode(!0),o=t.querySelector("li");switch(d){case"uncomplete":o.style.display=!0===e.completed?"none":"block";break;case"completed":o.style.display=!0===e.completed?"block":"none";break;default:o.style.display="block"}o.id="todo".concat(e.id);var n=o.querySelector("#input-todo"),r=o.querySelector("#edit-todo"),i=o.querySelector("#remove-todo"),c=o.querySelector("#complete-todo");n.value=e.title,n.style.textDecoration=!0===e.completed?"line-through":"none",n.addEventListener("dblclick",function(){this.readOnly=!1}),r.addEventListener("click",function(){n.readOnly=!0,l=(0,u.updateTodo)(l,{id:e.id,title:n.value}),a(d)}),i.addEventListener("click",function(){l=(0,u.removeTodo)(l,e),a(d)}),c.addEventListener("click",function(){l=(0,u.toggleTodo)(l,e),a(d)}),document.querySelector("#todo-list").appendChild(t)}),window.localStorage.setItem("todos",JSON.stringify(l))},a=function(e){!function(){for(var e=document.querySelector("#todo-list");e.firstChild;)e.removeChild(e.firstChild)}(),n(e),document.querySelector("#all").innerHTML=l.length,document.querySelector("#remaining").innerHTML=(0,u.remainingTodos)(l).length};!function(){var e;e=JSON.parse(window.localStorage.getItem("todos")),l=null===e?[]:e;var t=document.querySelector("#input-new-todo");t.addEventListener("keypress",function(e){(13===e.which||13===e.keyCode)&&(l=(0,u.addTodo)(l,t.value)),a(),t.value=""}),document.querySelector("#new-todo").addEventListener("click",function(){l=(0,u.addTodo)(l,t.value),a()}),document.querySelector("#complete-all-todo").addEventListener("click",function(){(0,u.completeAll)(l),a()}),document.querySelector("#show-all").addEventListener("click",function(){a()}),document.querySelector("#show-uncomplete").addEventListener("click",function(){a("uncomplete")}),document.querySelector("#show-completed").addEventListener("click",function(){a("completed")}),a()}()},{"./todo-function":2}],2:[function(e,t,o){"use strict";function i(e){return function(e){if(Array.isArray(e)){for(var t=0,o=new Array(e.length);t<e.length;t++)o[t]=e[t];return o}}(e)||function(e){if(Symbol.iterator in Object(e)||"[object Arguments]"===Object.prototype.toString.call(e))return Array.from(e)}(e)||function(){throw new TypeError("Invalid attempt to spread non-iterable instance")}()}Object.defineProperty(o,"__esModule",{value:!0}),o.remainingTodos=o.completeAll=o.toggleTodo=o.updateTodo=o.removeTodo=o.addTodo=void 0;o.addTodo=function(e,t){return""!==t?[].concat(i(e),[{id:e.reduce(function(e,t){return e.id>t.id?e.id:t.id},0)+1,title:t,completed:!1}]):(alert("u must type something first !!"),e)};o.removeTodo=function(e,t){var o=t.id;return e.filter(function(e){return e.id!==o})};o.updateTodo=function(e,t){var o=t.id,n=t.title,r=i(e);return r[r.findIndex(function(e){return e.id===o})].title=n,r};o.toggleTodo=function(e,t){var o=t.id,n=i(e),r=n.findIndex(function(e){return e.id===o});return n[r].completed=!n[r].completed,n};o.completeAll=function(e){return e.map(function(e){return e.completed=!0})};o.remainingTodos=function(e){return e.filter(function(e){return!1===e.completed})}},{}]},{},[1]);
//# sourceMappingURL=data:application/json;charset=utf8;base64,
